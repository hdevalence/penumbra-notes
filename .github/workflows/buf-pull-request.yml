name: Protobuf
on: pull_request
jobs:
  lint:
    name: Lint protobuf
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: bufbuild/buf-setup-action@v1
        with:
          buf_api_token: ${{ secrets.BUF_TOKEN }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          input: 'proto'
      - uses: bufbuild/buf-lint-action@v1
        with:
          input: 'proto'
          buf_token: ${{ secrets.BUF_TOKEN }}

      - name: Check for module path changes
        shell: bash
        run: |
          cd proto/penumbra
          buf mod update
          s="$(git status --porcelain)"
          if [[ -n "$s" ]]; then
              echo "ERROR: run 'buf mod update' to synchronize buf.lock"
              echo "$s"
              exit 1
          else
              echo "OK: no changes required to buf.lock"
          fi

      - name: Check for breaking changes
        uses: bufbuild/buf-breaking-action@v1
        with:
          input: 'proto'
          # The 'main' branch of the GitHub repository that defines the module.
          against: 'https://github.com/${GITHUB_REPOSITORY}.git#branch=main,subdir=crates/proto'

  protobuf-fresh:
    name: Compile protobuf specs to rust code
    runs-on: buildjet-16vcpu-ubuntu-2004
    # runs-on: ubuntu-latest
    steps:
      - name: Checkout the source code
        uses: actions/checkout@v2

      - uses: bufbuild/buf-setup-action@v1
        with:
          buf_api_token: ${{ secrets.BUF_TOKEN }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          input: 'proto'

      - name: Install protobuf compiler
        shell: bash
        run: |
          cd /tmp
          curl -sSfL -O https://github.com/protocolbuffers/protobuf/releases/download/v${PROTOC_VERSION}/protoc-${PROTOC_VERSION}-linux-x86_64.zip
          unzip protoc-${PROTOC_VERSION}-linux-x86_64.zip -d $HOME/.local
        env:
          # N.B. the major version is omitted in the download URLs,
          # so "21.8" actually means "3.21.8".
          PROTOC_VERSION: "21.8"

      # N.B. The freshness check can have false negatives, if `prost` output
      # is superficially but not substantively different. That's OK for now:
      # we're aiming to keep the defs in sync, and manual maintenance is required.
      - name: Compile protobuf specs into rust src files
        shell: bash
        run: |
          cd proto/
          buf generate
          s="$(git status --porcelain)"
          if [[ -n "$s" ]]; then
              echo "ERROR: protobuf files must be regenerated and committed:"
              echo "$s"
              exit 1
          else
              echo "OK: no changes required to protobuf specs"
          fi
