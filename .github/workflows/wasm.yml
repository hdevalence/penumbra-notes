on: [pull_request]
# The WASM compatibility workflow exists outside the suite of "Rust"
# workflows because the tests don't yet pass, and we want to isolate
# that CI failure specifically to the WASM compatibility push.
#
# There are two jobs:
#
#   1. dummy-package
#   2. penumrba-web-assembly
#
# The first documents a known-working build to the wasm32-unknown-unknown target,
# but without any functionality: it's an empty package. Still, it provides a baseline
# for known working dependencies, with other deps commented out.
#
# The second is the goal target: we want to support all the functionality in
# the "penumbra-web-assembly" crate, written by Zpoken. This crate has never compiled
# successfully, but we'll use that target to plan refactors to support WASM.
name: WASM compatibility
jobs:
  dummy_package:
    name: dummy-package
    runs-on: buildjet-16vcpu-ubuntu-2004
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: wasm32-unknown-unknown
          override: true
      - uses: Swatinem/rust-cache@v1
        with:
          workspaces: |
            . -> target
            wasm-compat

      # We cannot use the GH action because it doesn't working directory:
      # support custom working dirs.
      # - uses: actions-rs/cargo@v1
      - name: build wasm32 target
        run:
          cargo build --release --target wasm32-unknown-unknown
        working-directory: wasm-compat

  penumbra_web_assembly:
    name: penumbra-web-assembly
    runs-on: buildjet-16vcpu-ubuntu-2004
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: wasm32-unknown-unknown
          override: true
      - uses: Swatinem/rust-cache@v1
        with:
          workspaces: |
            . -> target
            penumbra-web-assembly

      # We cannot use the GH action because it doesn't working directory:
      # support custom working dirs.
      # - uses: actions-rs/cargo@v1
      - name: build wasm32 target
        run:
          cargo build --release --target wasm32-unknown-unknown
        working-directory: penumbra-web-assembly
