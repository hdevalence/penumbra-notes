{{- if .Values.only_lb_svc }}
{{- else }}
{{ $val0_name := printf "%s-val-0" (include "penumbra-network.fullname" $) }}
{{ $count := (.Values.network.num_validators | int) }}
{{ range $i,$e := until $count }}
{{ $val_name := printf "%s-val-%d" (include "penumbra-network.fullname" $) $i }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $val_name }}
  labels:
    app: {{ $val_name }}
    app.kubernetes.io/component: genesis-validator
    {{- include "penumbra-network.labels" $ | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: genesis-validator
      {{- include "penumbra-network.selectorLabels" $ | nindent 6 }}
  strategy:
    type: Recreate
  template:
    metadata:
      {{- with $.Values.podAnnotations }}
      annotations:
        {{- toYaml $ | nindent 8 }}
      {{- end }}
      labels:
        app: {{ $val_name }}
        app.kubernetes.io/part-of: {{ include "penumbra-network.part_of" $ }}
        app.kubernetes.io/component: genesis-validator
        {{- include "penumbra-network.selectorLabels" $ | nindent 8 }}
    spec:
      # Force the pods to different k8s nodes, so that egress ip is unique per CometBFT node.
      # Effectively limits the number of Penumbra nodes to the number of k8s nodes in the cluster.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app.kubernetes.io/part-of"
                    operator: In
                    values:
                      - {{ include "penumbra-network.part_of" $ }}
                  - key: "app.kubernetes.io/component"
                    operator: In
                    values:
                      - fullnode
                      - genesis-validator
              topologyKey: kubernetes.io/hostname
      {{- with $.Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml $ | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "penumbra-network.serviceAccountName" $ }}
      securityContext:
        {{- toYaml $.Values.podSecurityContext | nindent 8 }}
      volumes:
        - name: {{ $val_name }}-config
      {{- if $.Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ $val_name }}-config
      {{- else }}
          emptyDir: {}
      {{- end }}

      containers:
        - name: pd
          securityContext:
            {{- toYaml $.Values.securityContext | nindent 12 }}
          image: "{{ $.Values.image.repository }}:{{ $.Values.image.tag | default $.Chart.AppVersion }}"
          imagePullPolicy: {{ $.Values.image.pullPolicy }}
          command:
            - /usr/bin/pd
            - start
            - --grpc-bind
            - "0.0.0.0:8080"
            - --metrics-bind
            - "0.0.0.0:9000"
            - --home
            - "/penumbra-config/{{ $val_name }}/node{{ $i }}/pd"
          ports:
            - name: pd-grpc
              containerPort: 8080
              protocol: TCP
            - name: pd-metrics
              containerPort: 9000
              protocol: TCP
            - name: pd-abci
              containerPort: 26658
              protocol: TCP
          readinessProbe:
            tcpSocket:
              port: pd-grpc
            timeoutSeconds: 5
            initialDelaySeconds: 20
          resources:
            {{- toYaml $.Values.resources | nindent 12 }}
          volumeMounts:
            - name: {{ $val_name }}-config
              mountPath: /penumbra-config/{{ $val_name }}

        - name: cometbft
          image: "{{ $.Values.cometbft.image.repository }}:{{ $.Values.cometbft.image.tag }}"
          imagePullPolicy: {{ $.Values.cometbft.image.pullPolicy }}
          command:
            - cometbft
            - start
            - --proxy_app=tcp://127.0.0.1:26658
          ports:
            - name: tm-p2p
              containerPort: 26656
              protocol: TCP
            - name: tm-rpc
              containerPort: 26657
              protocol: TCP
            - name: tm-metrics
              containerPort: 26660
              protocol: TCP
          readinessProbe:
            tcpSocket:
              port: tm-rpc
            timeoutSeconds: 10
            initialDelaySeconds: 10
          resources:
            {{- toYaml $.Values.resources | nindent 12 }}
          volumeMounts:
            - name: {{ $val_name }}-config
              subPath: node{{ $i }}/cometbft
              mountPath: /cometbft
      {{- with $.Values.nodeSelector }}
      nodeSelector:
        {{- toYaml $ | nindent 8 }}
      {{- end }}
      {{- with $.Values.affinity }}
      affinity:
        {{- toYaml $ | nindent 8 }}
      {{- end }}
      {{- with $.Values.tolerations }}
      tolerations:
        {{- toYaml $ | nindent 8 }}
      {{- end }}
{{- end }}
{{- end }}
