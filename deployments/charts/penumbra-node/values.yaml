# Default values for penumbra-node.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  # repository: harbor.ruin.dev/library/penumbra
  repository: ghcr.io/penumbra-zone/penumbra
  pullPolicy: Always
  # "latest" tag means most recently deployed testnet tag.
  # Use "main" for tracking preview.
  tag: latest

# Penumbra node from which to bootstrap connection. Defaults to testnet.
# Consider using "preview" for bleeding edge, but make sure container tags match.
penumbra_bootstrap_node_cometbft_rpc_url: "https://rpc.testnet.penumbra.zone"

# Whether to preserve the LB service, in effect reserving the same IP
# for subsequent deploys. This costs money! But sure is convenient.
preserve_lb_svc: false

# Whether to configure *only* the LoadBalancer Services, in order to provision
# the public IPs prior to application deployment. This allows polling the IPs
# and using them as config inputs, via values.
only_lb_svc: false

# Configure PVCs for chain data. If disabled, an emptydir will be used,
# which means a fresh node will be created on every pod restart.
persistence:
  enabled: false
  storageClassName:
  accessModes:
    - ReadWriteOnce
  size: 10G

# settings for cometbft sidecar
cometbft:
  image:
    repository: cometbft/cometbft
    pullPolicy: IfNotPresent
    # https://github.com/cometbft/cometbft#supported-versions
    tag: "v0.37.5"
  # Override sections of the CometBFT config. Applies to all nodes.
  config:
    p2p:
      max_num_inbound_peers: 300
      max_num_outbound_peers: 200
    # Set the indexer strategy. Can be "kv" or "psql".
    indexer: kv
    # URL for connecting to the postgresql database. Only used if `indexer=psql`.
    # N.B. If `postgres.credentialsSecretName` is set, the value from that Secret will be used instead.
    postgres_connection_url: "postgresql://penumbra:penumbra@localhost:5432/penumbra?sslmode=disable"

# settings for optional postgres sidecar, used for indexing cometbft events
postgres:
  image:
    repository: docker.io/library/postgres
    pullPolicy: IfNotPresent
    tag: "latest"
  # In order to support TLS for an external db connection, consider reusing a `kubernetes.io/tls`
  # Secret here, which will be mounted read-only and used for SSL. Requires an externally-provisioned LB.
  certificateSecretName: ""
  # Load database auth info from a Secret resource, created out of band. Must have keys:
  #
  #   - database
  #   - username
  #   - password
  #   - connection_url
  #
  # where `connection_url` is formatted like the example in `cometbft.config.postgres_connection_url`.
  credentialsSecretName: ""

# Configure nodes. By default, only one is created.
# Extend this list to add more. Valid node attributes are:
#
#   - moniker
#   - external_address
#   - seed_mode
#
# Nodes with seed_mode=true will be excluded from the ingress.
nodes:
  - moniker: ididntedittheconfig
    external_address: ""
    seed_mode: false

# Custom label for aggregating network, nodes, and metrics into a cohesive deployment.
# Maps to the 'app.kubernetes.io/part-of' label.
part_of: ""

# N.B. Only `IngressRoute`, a custom CRD specific to Traefik ingress controller
# is supported. This is because a traditional Ingress object doesn't allow us
# to force a backend scheme of h2c, which is required for pd's gRPC service.
ingressRoute:
  enabled: false
  hosts:
    # consider using DNS wildcards, e.g. *.devnet.chart-example.local
    pd: pd.chart-example.local
    tm: tm.chart-example.local
  # Secret object containing TLS info
  secretName: ""
  # Traefik middleware CRDs, to be applied to pd's gRPC service.
  # These config objects must already exist in the API, i.e. create them out of band.
  middlewares:
    - name: ratelimit-pd

# Whether to place the application in "maintenance mode", effectively stopping pd and cometbft,
# allowing an administrator to inspect and munge local state, e.g. to perform a chain upgrade.
# Makes two changes: 1) sets the `command` for the containers to `sleep infinity`; and 2) sets
# the uid for the pd container to 0/root
maintenanceMode: false

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  # The Penumbra container sets 1000 as default UID. We'll use that by default.
  # See also `maintenanceMode=true`, which overrides this to 0.
  runAsUser: 1000

  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true

# The chart uses a top-level `ingressRoute` rather than `ingress` value map,
# because use of Traefik CRD `IngressRoute` is required for h2c support,
# so that pd's gRPC service can have an HTTPS reverse proxy in front of it.
ingressRoute:
  enabled: false
  hosts:
    pd: grpc.chart-example.local
    tm: rpc.chart-example.local

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
