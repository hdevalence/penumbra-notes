# Default values for penumbra-metrics.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/penumbra-zone/grafana
  tag: latest
  pullPolicy: Always

prometheus:
  repository: docker.io/prom/prometheus
  tag: latest
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# Information about which metrics targets to scrape.
# These values are intended to be DRY: see configmap for templating logic.
scrape_configs:
  numFullNodes: 2
  numValidators: 2
  # printf formatting string, for generating scrape targets.
  fmtFullNodeSvc: "penumbra-testnet-preview-fn-%d"
  fmtValidatorSvc: "penumbra-testnet-preview-val-%d"

# Configure PVCs for metrics data. If disabled, an emptydir will be used,
# which means historical metrics will be wiped on every pod restart.
persistence:
  enabled: false
  storageClassName:
  accessModes:
    - ReadWriteOnce
  size: 5G

# Custom label for aggregating network, nodes, and metrics into a cohesive deployment.
# Maps to the 'app.kubernetes.io/part-of' label.
part_of: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  # 3000/TCP is default grafana HTTP service
  port: 3000

# N.B. Only `IngressRoute`, a custom CRD specific to Traefik ingress controller
# is supported. This is because a traditional Ingress object doesn't allow us
# to force a backend scheme of h2c, which is required for pd's gRPC service.
ingressRoute:
  enabled: false
  hosts:
    # consider using DNS wildcards, e.g. *.devnet.chart-example.local
    grafana: grafana.chart-example.local
    prometheus: prometheus.chart-example.local
  # Secret object containing TLS info
  secretName: ""

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
