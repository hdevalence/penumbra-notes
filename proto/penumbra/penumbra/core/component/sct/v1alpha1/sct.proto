syntax = "proto3";
package penumbra.core.component.sct.v1alpha1;

import "penumbra/core/component/chain/v1alpha1/chain.proto";
import "penumbra/crypto/tct/v1alpha1/tct.proto";

message Nullifier {
  bytes inner = 1;
}

// Query operations for the SCT component.
service QueryService {
  // TODO: change to generic tx-by-commitment
  rpc TransactionByNote(TransactionByNoteRequest) returns (TransactionByNoteResponse);
}

message TransactionByNoteRequest {
  // The expected chain id (empty string if no expectation).
  string chain_id = 1;
  crypto.tct.v1alpha1.StateCommitment note_commitment = 2;
}

message TransactionByNoteResponse {
  core.component.chain.v1alpha1.NoteSource note_source = 1;
}

// The global SCT root at the given height.
message EventRootAnchor {
  // The height of the block
  uint64 height = 1;
  // The root hash of a note commitment tree.
  crypto.tct.v1alpha1.MerkleRoot root_anchor = 2;
}

// The root of the epoch subtree at the given height.
message EventEpochAnchor {
  // The epoch index.
  uint64 index = 1;
  // The root hash of an epoch.
  crypto.tct.v1alpha1.MerkleRoot epoch_anchor = 2;
}

// The root of the block subtree at the given height.
message EventBlockAnchor {
  // The height of the block.
  uint64 height = 1;
  // The root hash of a block.
  crypto.tct.v1alpha1.MerkleRoot block_anchor = 2;
}
