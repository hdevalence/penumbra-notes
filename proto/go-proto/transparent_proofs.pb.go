// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: transparent_proofs.proto

package go_proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// A Penumbra transparent Spend Proof.
type SpendProof struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Auxiliary inputs
	NoteCommitmentProof *NoteCommitmentProof `protobuf:"bytes,1,opt,name=note_commitment_proof,json=noteCommitmentProof,proto3" json:"note_commitment_proof,omitempty"`
	GD                  []byte               `protobuf:"bytes,2,opt,name=g_d,json=gD,proto3" json:"g_d,omitempty"`
	PkD                 []byte               `protobuf:"bytes,3,opt,name=pk_d,json=pkD,proto3" json:"pk_d,omitempty"`
	ValueAmount         uint64               `protobuf:"varint,4,opt,name=value_amount,json=valueAmount,proto3" json:"value_amount,omitempty"`
	ValueAssetId        []byte               `protobuf:"bytes,5,opt,name=value_asset_id,json=valueAssetId,proto3" json:"value_asset_id,omitempty"`
	VBlinding           []byte               `protobuf:"bytes,6,opt,name=v_blinding,json=vBlinding,proto3" json:"v_blinding,omitempty"`
	NoteBlinding        []byte               `protobuf:"bytes,8,opt,name=note_blinding,json=noteBlinding,proto3" json:"note_blinding,omitempty"`
	SpendAuthRandomizer []byte               `protobuf:"bytes,9,opt,name=spend_auth_randomizer,json=spendAuthRandomizer,proto3" json:"spend_auth_randomizer,omitempty"`
	Ak                  []byte               `protobuf:"bytes,10,opt,name=ak,proto3" json:"ak,omitempty"`
	Nk                  []byte               `protobuf:"bytes,11,opt,name=nk,proto3" json:"nk,omitempty"`
}

func (x *SpendProof) Reset() {
	*x = SpendProof{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transparent_proofs_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpendProof) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpendProof) ProtoMessage() {}

func (x *SpendProof) ProtoReflect() protoreflect.Message {
	mi := &file_transparent_proofs_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpendProof.ProtoReflect.Descriptor instead.
func (*SpendProof) Descriptor() ([]byte, []int) {
	return file_transparent_proofs_proto_rawDescGZIP(), []int{0}
}

func (x *SpendProof) GetNoteCommitmentProof() *NoteCommitmentProof {
	if x != nil {
		return x.NoteCommitmentProof
	}
	return nil
}

func (x *SpendProof) GetGD() []byte {
	if x != nil {
		return x.GD
	}
	return nil
}

func (x *SpendProof) GetPkD() []byte {
	if x != nil {
		return x.PkD
	}
	return nil
}

func (x *SpendProof) GetValueAmount() uint64 {
	if x != nil {
		return x.ValueAmount
	}
	return 0
}

func (x *SpendProof) GetValueAssetId() []byte {
	if x != nil {
		return x.ValueAssetId
	}
	return nil
}

func (x *SpendProof) GetVBlinding() []byte {
	if x != nil {
		return x.VBlinding
	}
	return nil
}

func (x *SpendProof) GetNoteBlinding() []byte {
	if x != nil {
		return x.NoteBlinding
	}
	return nil
}

func (x *SpendProof) GetSpendAuthRandomizer() []byte {
	if x != nil {
		return x.SpendAuthRandomizer
	}
	return nil
}

func (x *SpendProof) GetAk() []byte {
	if x != nil {
		return x.Ak
	}
	return nil
}

func (x *SpendProof) GetNk() []byte {
	if x != nil {
		return x.Nk
	}
	return nil
}

// A Penumbra transparent output proof.
type OutputProof struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Auxiliary inputs
	GD           []byte `protobuf:"bytes,1,opt,name=g_d,json=gD,proto3" json:"g_d,omitempty"`
	PkD          []byte `protobuf:"bytes,2,opt,name=pk_d,json=pkD,proto3" json:"pk_d,omitempty"`
	ValueAmount  uint64 `protobuf:"varint,3,opt,name=value_amount,json=valueAmount,proto3" json:"value_amount,omitempty"`
	ValueAssetId []byte `protobuf:"bytes,4,opt,name=value_asset_id,json=valueAssetId,proto3" json:"value_asset_id,omitempty"`
	VBlinding    []byte `protobuf:"bytes,5,opt,name=v_blinding,json=vBlinding,proto3" json:"v_blinding,omitempty"`
	NoteBlinding []byte `protobuf:"bytes,6,opt,name=note_blinding,json=noteBlinding,proto3" json:"note_blinding,omitempty"`
	Esk          []byte `protobuf:"bytes,7,opt,name=esk,proto3" json:"esk,omitempty"`
}

func (x *OutputProof) Reset() {
	*x = OutputProof{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transparent_proofs_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OutputProof) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OutputProof) ProtoMessage() {}

func (x *OutputProof) ProtoReflect() protoreflect.Message {
	mi := &file_transparent_proofs_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OutputProof.ProtoReflect.Descriptor instead.
func (*OutputProof) Descriptor() ([]byte, []int) {
	return file_transparent_proofs_proto_rawDescGZIP(), []int{1}
}

func (x *OutputProof) GetGD() []byte {
	if x != nil {
		return x.GD
	}
	return nil
}

func (x *OutputProof) GetPkD() []byte {
	if x != nil {
		return x.PkD
	}
	return nil
}

func (x *OutputProof) GetValueAmount() uint64 {
	if x != nil {
		return x.ValueAmount
	}
	return 0
}

func (x *OutputProof) GetValueAssetId() []byte {
	if x != nil {
		return x.ValueAssetId
	}
	return nil
}

func (x *OutputProof) GetVBlinding() []byte {
	if x != nil {
		return x.VBlinding
	}
	return nil
}

func (x *OutputProof) GetNoteBlinding() []byte {
	if x != nil {
		return x.NoteBlinding
	}
	return nil
}

func (x *OutputProof) GetEsk() []byte {
	if x != nil {
		return x.Esk
	}
	return nil
}

// A Penumbra transparent Swap Proof.
// TODO: placeholder
type SwapProof struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Auxiliary inputs
	NoteCommitmentBlockProof *NoteCommitmentBlockProof `protobuf:"bytes,1,opt,name=note_commitment_block_proof,json=noteCommitmentBlockProof,proto3" json:"note_commitment_block_proof,omitempty"`
	NoteCommitmentPosition   uint64                    `protobuf:"varint,12,opt,name=note_commitment_position,json=noteCommitmentPosition,proto3" json:"note_commitment_position,omitempty"`
	GD                       []byte                    `protobuf:"bytes,2,opt,name=g_d,json=gD,proto3" json:"g_d,omitempty"`
	PkD                      []byte                    `protobuf:"bytes,3,opt,name=pk_d,json=pkD,proto3" json:"pk_d,omitempty"`
	ValueAmount              uint64                    `protobuf:"varint,4,opt,name=value_amount,json=valueAmount,proto3" json:"value_amount,omitempty"`
	ValueAssetId             []byte                    `protobuf:"bytes,5,opt,name=value_asset_id,json=valueAssetId,proto3" json:"value_asset_id,omitempty"`
	VBlinding                []byte                    `protobuf:"bytes,6,opt,name=v_blinding,json=vBlinding,proto3" json:"v_blinding,omitempty"`
	NoteBlinding             []byte                    `protobuf:"bytes,8,opt,name=note_blinding,json=noteBlinding,proto3" json:"note_blinding,omitempty"`
	SpendAuthRandomizer      []byte                    `protobuf:"bytes,9,opt,name=spend_auth_randomizer,json=spendAuthRandomizer,proto3" json:"spend_auth_randomizer,omitempty"`
	Ak                       []byte                    `protobuf:"bytes,10,opt,name=ak,proto3" json:"ak,omitempty"`
	Nk                       []byte                    `protobuf:"bytes,11,opt,name=nk,proto3" json:"nk,omitempty"`
}

func (x *SwapProof) Reset() {
	*x = SwapProof{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transparent_proofs_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwapProof) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwapProof) ProtoMessage() {}

func (x *SwapProof) ProtoReflect() protoreflect.Message {
	mi := &file_transparent_proofs_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwapProof.ProtoReflect.Descriptor instead.
func (*SwapProof) Descriptor() ([]byte, []int) {
	return file_transparent_proofs_proto_rawDescGZIP(), []int{2}
}

func (x *SwapProof) GetNoteCommitmentBlockProof() *NoteCommitmentBlockProof {
	if x != nil {
		return x.NoteCommitmentBlockProof
	}
	return nil
}

func (x *SwapProof) GetNoteCommitmentPosition() uint64 {
	if x != nil {
		return x.NoteCommitmentPosition
	}
	return 0
}

func (x *SwapProof) GetGD() []byte {
	if x != nil {
		return x.GD
	}
	return nil
}

func (x *SwapProof) GetPkD() []byte {
	if x != nil {
		return x.PkD
	}
	return nil
}

func (x *SwapProof) GetValueAmount() uint64 {
	if x != nil {
		return x.ValueAmount
	}
	return 0
}

func (x *SwapProof) GetValueAssetId() []byte {
	if x != nil {
		return x.ValueAssetId
	}
	return nil
}

func (x *SwapProof) GetVBlinding() []byte {
	if x != nil {
		return x.VBlinding
	}
	return nil
}

func (x *SwapProof) GetNoteBlinding() []byte {
	if x != nil {
		return x.NoteBlinding
	}
	return nil
}

func (x *SwapProof) GetSpendAuthRandomizer() []byte {
	if x != nil {
		return x.SpendAuthRandomizer
	}
	return nil
}

func (x *SwapProof) GetAk() []byte {
	if x != nil {
		return x.Ak
	}
	return nil
}

func (x *SwapProof) GetNk() []byte {
	if x != nil {
		return x.Nk
	}
	return nil
}

var File_transparent_proofs_proto protoreflect.FileDescriptor

var file_transparent_proofs_proto_rawDesc = []byte{
	0x0a, 0x18, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72,
	0x6f, 0x6f, 0x66, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1b, 0x70, 0x65, 0x6e, 0x75,
	0x6d, 0x62, 0x72, 0x61, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x5f, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x73, 0x1a, 0x0c, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xeb, 0x02, 0x0a, 0x0a, 0x53, 0x70, 0x65, 0x6e, 0x64, 0x50,
	0x72, 0x6f, 0x6f, 0x66, 0x12, 0x58, 0x0a, 0x15, 0x6e, 0x6f, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x62, 0x72, 0x61, 0x2e, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x13, 0x6e, 0x6f, 0x74, 0x65, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x0f,
	0x0a, 0x03, 0x67, 0x5f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x67, 0x44, 0x12,
	0x11, 0x0a, 0x04, 0x70, 0x6b, 0x5f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x70,
	0x6b, 0x44, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x76,
	0x5f, 0x62, 0x6c, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x09, 0x76, 0x42, 0x6c, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x23, 0x0a, 0x0d, 0x6e, 0x6f,
	0x74, 0x65, 0x5f, 0x62, 0x6c, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0c, 0x6e, 0x6f, 0x74, 0x65, 0x42, 0x6c, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12,
	0x32, 0x0a, 0x15, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x72, 0x61,
	0x6e, 0x64, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x13,
	0x73, 0x70, 0x65, 0x6e, 0x64, 0x41, 0x75, 0x74, 0x68, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x69,
	0x7a, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x61, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x02, 0x61, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x6e, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x02, 0x6e, 0x6b, 0x22, 0xd0, 0x01, 0x0a, 0x0b, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x50, 0x72,
	0x6f, 0x6f, 0x66, 0x12, 0x0f, 0x0a, 0x03, 0x67, 0x5f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x02, 0x67, 0x44, 0x12, 0x11, 0x0a, 0x04, 0x70, 0x6b, 0x5f, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x03, 0x70, 0x6b, 0x44, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0c, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x5f, 0x62, 0x6c, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x76, 0x42, 0x6c, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12,
	0x23, 0x0a, 0x0d, 0x6e, 0x6f, 0x74, 0x65, 0x5f, 0x62, 0x6c, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x6e, 0x6f, 0x74, 0x65, 0x42, 0x6c, 0x69, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x73, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x03, 0x65, 0x73, 0x6b, 0x22, 0xb4, 0x03, 0x0a, 0x09, 0x53, 0x77, 0x61, 0x70, 0x50,
	0x72, 0x6f, 0x6f, 0x66, 0x12, 0x68, 0x0a, 0x1b, 0x6e, 0x6f, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x70, 0x72,
	0x6f, 0x6f, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x65, 0x6e, 0x75,
	0x6d, 0x62, 0x72, 0x61, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x74, 0x65,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x50,
	0x72, 0x6f, 0x6f, 0x66, 0x52, 0x18, 0x6e, 0x6f, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x38,
	0x0a, 0x18, 0x6e, 0x6f, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x16, 0x6e, 0x6f, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0f, 0x0a, 0x03, 0x67, 0x5f, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x67, 0x44, 0x12, 0x11, 0x0a, 0x04, 0x70, 0x6b, 0x5f,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x70, 0x6b, 0x44, 0x12, 0x21, 0x0a, 0x0c,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0b, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x24, 0x0a, 0x0e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x5f, 0x62, 0x6c, 0x69, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x76, 0x42, 0x6c, 0x69, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x12, 0x23, 0x0a, 0x0d, 0x6e, 0x6f, 0x74, 0x65, 0x5f, 0x62, 0x6c, 0x69,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x6e, 0x6f, 0x74,
	0x65, 0x42, 0x6c, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x32, 0x0a, 0x15, 0x73, 0x70, 0x65,
	0x6e, 0x64, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x69, 0x7a,
	0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x13, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x41,
	0x75, 0x74, 0x68, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x72, 0x12, 0x0e, 0x0a,
	0x02, 0x61, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x61, 0x6b, 0x12, 0x0e, 0x0a,
	0x02, 0x6e, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x6e, 0x6b, 0x42, 0x32, 0x5a,
	0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x65, 0x6e, 0x75,
	0x6d, 0x62, 0x72, 0x61, 0x2d, 0x7a, 0x6f, 0x6e, 0x65, 0x2f, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x62,
	0x72, 0x61, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x2d, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_transparent_proofs_proto_rawDescOnce sync.Once
	file_transparent_proofs_proto_rawDescData = file_transparent_proofs_proto_rawDesc
)

func file_transparent_proofs_proto_rawDescGZIP() []byte {
	file_transparent_proofs_proto_rawDescOnce.Do(func() {
		file_transparent_proofs_proto_rawDescData = protoimpl.X.CompressGZIP(file_transparent_proofs_proto_rawDescData)
	})
	return file_transparent_proofs_proto_rawDescData
}

var file_transparent_proofs_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_transparent_proofs_proto_goTypes = []interface{}{
	(*SpendProof)(nil),               // 0: penumbra.transparent_proofs.SpendProof
	(*OutputProof)(nil),              // 1: penumbra.transparent_proofs.OutputProof
	(*SwapProof)(nil),                // 2: penumbra.transparent_proofs.SwapProof
	(*NoteCommitmentProof)(nil),      // 3: penumbra.crypto.NoteCommitmentProof
	(*NoteCommitmentBlockProof)(nil), // 4: penumbra.crypto.NoteCommitmentBlockProof
}
var file_transparent_proofs_proto_depIdxs = []int32{
	3, // 0: penumbra.transparent_proofs.SpendProof.note_commitment_proof:type_name -> penumbra.crypto.NoteCommitmentProof
	4, // 1: penumbra.transparent_proofs.SwapProof.note_commitment_block_proof:type_name -> penumbra.crypto.NoteCommitmentBlockProof
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_transparent_proofs_proto_init() }
func file_transparent_proofs_proto_init() {
	if File_transparent_proofs_proto != nil {
		return
	}
	file_crypto_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_transparent_proofs_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpendProof); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transparent_proofs_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OutputProof); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transparent_proofs_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwapProof); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_transparent_proofs_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_transparent_proofs_proto_goTypes,
		DependencyIndexes: file_transparent_proofs_proto_depIdxs,
		MessageInfos:      file_transparent_proofs_proto_msgTypes,
	}.Build()
	File_transparent_proofs_proto = out.File
	file_transparent_proofs_proto_rawDesc = nil
	file_transparent_proofs_proto_goTypes = nil
	file_transparent_proofs_proto_depIdxs = nil
}
