syntax = "proto3";
package penumbra.transparent_proofs;

// A Penumbra transaction proof.
message TransactionProof {
  repeated ProofAction proof_actions = 1;
}

// Witness data associated with a given action.
message ProofAction {
  oneof proof_action {
    Spend spend = 1;
    Output output = 2;
  }
}

// Witness data for a Penumbra transparent spend.
message Spend {
  // Auxiliary inputs
  uint32 merkle_path_field_0 = 1;
  repeated bytes merkle_path_field_1 = 2;
  uint64 position = 3;
  bytes g_d = 4;
  bytes pk_d = 5;
  uint64 value_amount = 6;
  bytes value_asset_id = 7;
  bytes v_blinding = 8;
  bytes note_commitment = 9;
  bytes note_blinding = 10;
  bytes spend_auth_randomizer = 11;
  bytes ak = 12;
  bytes nk = 13;
}

// Witness data for a Penumbra transparent output.
message Output {
  // Auxiliary inputs
  bytes g_d = 1;
  bytes pk_d = 2;
  uint64 value_amount = 3;
  bytes value_asset_id = 4;
  bytes v_blinding = 5;
  bytes note_blinding = 6;
  bytes esk = 7;
}
