syntax = "proto3";
package penumbra.light_wallet;

import "crypto.proto";
import "chain.proto";
import "stake.proto";

// A light wallet service.
//
// This protocol attempts to be trust-minimized, both in terms of integrity and privacy.
service LightWallet {
  rpc CompactBlockRange(CompactBlockRangeRequest) returns (stream chain.CompactBlock);
  rpc ChainParams(ChainParamsRequest) returns (chain.ChainParams);
  rpc ValidatorInfo(ValidatorInfoRequest) returns (stream stake.ValidatorInfo);
  rpc AssetList(AssetListRequest) returns (chain.KnownAssets);
}

// Lists all assets in Asset Registry
message AssetListRequest {
  // The expected chain id (empty string if no expectation).
  string chain_id = 1;
}

// Requests a range of compact block data.
message CompactBlockRangeRequest {
  // The expected chain id (empty string if no expectation).
  string chain_id = 1;
  // The start height of the range.
  uint64 start_height = 2;
  // The end height of the range.
  uint64 end_height = 3;
}

// Requests the global configuration data for the chain.
message ChainParamsRequest {
  // The expected chain id (empty string if no expectation).
  string chain_id = 1;
}

// Requests information on the chain's validators.
message ValidatorInfoRequest {
  // The expected chain id (empty string if no expectation).
  string chain_id = 1;
  // Whether or not to return inactive validators
  bool show_inactive = 2;
}
