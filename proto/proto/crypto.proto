syntax = "proto3";
package penumbra.crypto;

message Address {
    bytes inner = 1;
}

message FullViewingKey {
    bytes inner = 1;
}

message Diversifier {
    bytes inner = 1;
}

message DiversifierIndex {
    bytes inner = 1;
}

message NoteCommitment {
    bytes inner = 1;
}

message AssetId {
    bytes inner = 1;
}

message Denom {
    string denom = 1;
}

message Value {
    uint64 amount = 1;
    AssetId asset_id = 2;
}

message MerkleRoot {
    bytes inner = 1;
}

message Asset {
  AssetId id = 1;
  Denom denom = 2;
}

// A validator's identity key (decaf377-rdsa spendauth verification key).
message IdentityKey {
  bytes ik = 1;
}

message Note {
    // We have a hand-rolled binary encoding for note contents that's more
    // compact than a proto and guaranteed to be constant-size (unlike a proto,
    // which uses variable-length encodings).  We use it here, so the "real"
    // parsing will happen in the conversion to the domain type.
    //
    // TODO(hdevalence) -- plausible justification, is it actually a good one?
    bytes inner = 1;
}
