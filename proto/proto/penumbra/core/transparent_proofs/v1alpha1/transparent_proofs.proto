syntax = "proto3";

package penumbra.core.transparent_proofs.v1alpha1;

import "penumbra/core/crypto/v1alpha1/crypto.proto";
import "penumbra/core/dex/v1alpha1/dex.proto";

// A Penumbra transparent Spend Proof.
message SpendProof {
  // Auxiliary inputs
  crypto.v1alpha1.StateCommitmentProof state_commitment_proof = 1;

  /**
   * @exclude
   * From the note being spent
  */
  crypto.v1alpha1.Note note = 2;

  bytes v_blinding = 6;
  bytes spend_auth_randomizer = 9;
  bytes ak = 10;
  bytes nk = 11;
}

// A Penumbra transparent SwapClaimProof.
message SwapClaimProof {
  // The swap being claimed
  dex.v1alpha1.SwapPlaintext swap_plaintext = 1;

  // Inclusion proof for the swap commitment
  crypto.v1alpha1.StateCommitmentProof swap_commitment_proof = 4;

  // The nullifier key used to derive the swap nullifier
  bytes nk = 6;

  /**
   * @exclude
   * Describes output amounts
  */
  crypto.v1alpha1.Amount lambda_1_i = 20;
  crypto.v1alpha1.Amount lambda_2_i = 21;
}

message UndelegateClaimProof {
  crypto.v1alpha1.Amount unbonding_amount = 1;
  bytes balance_blinding = 2;
}